esphome:
  name: nodemcu8266
  friendly_name: NodeMCU-5input

esp8266:
  board: esp01_1m

# Enable logging
logger:
  level: DEBUG  # You can adjust the overall logging level if needed.


# Enable Home Assistant API
api:
  encryption:
    key: "JHRxsUjlHRqoGVi1dDiKGUtbWaREr8RlEW3FEvwUIEc="

ota:
  password: "b3358fab5d00a10887d2a56fd66c6d6a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Nodemcu8266 Fallback Hotspot"
    password: "4TH5MXjZIgwN"

captive_portal:

# create 5 inputs that use the safest input lines
# some input lines have overlapping uses during boot 
# and should be avoided
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO5
      mode: INPUT_PULLUP
      inverted: true
    name: "Input D1"
  - platform: gpio
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
    name: "Input D2"
  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
    name: "Input D5"
  - platform: gpio
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: true
    name: "Input D6"
  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: true
    name: "Input D7"

# This is a heartbeat function to verify running code
output:
  - platform: gpio
    pin:
      number: GPIO02
      inverted: true  # Inverted because NodeMCU's onboard LED is active low
    id: onboard_led
# setup the on-board led
light:
  - platform: binary
    output: onboard_led
    id: blinking_light
    internal: true
# blink the led once per second
interval:
  - interval: 1s
    then:
      - light.toggle: blinking_light
